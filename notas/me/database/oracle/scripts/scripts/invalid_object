#!/bin/ksh

Exit_fail() {
   echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
   echo "`date` - invalid object for $Pdatabase - Ending Failed"
   echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
   exit -1
}

Usage() {
        echo -e "\nUsage : $0 -d <database name>\n"
        Exit_fail
}

Analyze_options_passed() {
[ -z "$Pdatabase" ] && echo -e "\nNo Database Specified..." &&  Usage
}

Execute_environment_file() {
  export ORACLE_HOME=`grep ^${Pdatabase}: /etc/oratab | cut -f2 -d :`
  export ORACLE_SID=${Pdatabase}
}

Invalid_Object() {
sqlplus -s /nolog <<EOS 1>/tmp/invalid_object.log
connect / as sysdba

set term off
set feedback off
set verify off
set heading off
set pagesize 0

spool /tmp/recompile_object.sql

select 'alter ' || 
       decode(object_type,'PACKAGE BODY','PACKAGE', object_type) ||
       ' ' || owner || '."' || object_name || '" compile ' ||
       decode(object_type,'PACKAGE BODY','BODY','') || ' ;'
from dba_objects
where object_type in ('PROCEDURE','FUNCTION','PACKAGE BODY','PACKAGE','TRIGGER','VIEW','TYPE')
and status = 'INVALID';
spool off

set termout on
set feedback on
set verify on
set heading on
set pagesize 9999
@/tmp/recompile_object
exit
EOS

sqlplus -s /nolog <<EOS
connect / as sysdba

set linesize 132;
set pagesize 0;
set feedback off;
column object_name format a30;
select owner, object_name, object_type 
from dba_objects
where object_type in ('PROCEDURE','FUNCTION','PACKAGE BODY','PACKAGE','TRIGGER','VIEW','TYPE')
and status <> 'VALID';
exit
EOS
}

main() {
echo -e "\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
echo "`date` - $0 - Starting for $Pdatabase"
echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"

Analyze_options_passed

Execute_environment_file

cat /dev/null > /tmp/invalid_object.log

#check databases 
Invalid_Object $dbname 

echo -e "\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
echo "`date` - $0 - Ending for $Pdatabase"
echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
}

while getopts "d:" opt
do
  case $opt in
        d)      Pdatabase=$OPTARG ;;
        *)      Usage
                Exit_fail
                ;;
  esac
done

main
exit 0

