#!/bin/ksh

Exit_fail() {
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo "`date` - outstanding_alert for $Pdatabase - Ending Fail"
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  exit -1
}

Usage() {
  echo -e "\nUsage : $0 -d <database name>\n"
  Exit_fail
}

Analyze_options_passed() {
[ -z "$Pdatabase" ] && echo -e "\nNo Database Specified..." && Usage
}

Execute_environment_file() {
  export ORACLE_HOME=`grep ^${Pdatabase}: /etc/oratab | cut -f2 -d :`
  export ORACLE_SID=${Pdatabase}
}

outstanding_alert() {
sqlplus -s /nolog <<EOS
connect / as sysdba
set linesize   145
set pagesize  1000
set trimout     on
set trimspool   on
Set Feedback   off
set timing     off
set verify     off


prompt

prompt -- ----------------------------------------------------------------------- ---

prompt --   Outstanding Alert                                                     ---

prompt -- ----------------------------------------------------------------------- ---

prompt


column ct                format a18    heading  "Creation Time"
column instance_name     format a8     heading  "Instance|Name"
column object_type       format a14    heading  "Object|Type"
column message_type      format a9     heading  "Message|Type"
column message_level     format 9999   heading  "Mess.|Lev."
column reason            format a30    heading  "Reason"
column suggested_action  format a75    heading  "Suggested|Action"

Select  
       To_Char(Creation_Time, 'DD-MM-YYYY HH24:MI') ct
     , instance_name          
     , object_type            
     , message_type         
     , message_level       
     , reason             
     , suggested_action  
  From 
       dba_outstanding_alerts
 Order
     By Creation_Time
;


Prompt
EOS
}

main() {
echo -e "\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
echo "`date`- $0 Starting for $Pdatabase"
echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"

Analyze_options_passed

Execute_environment_file

outstanding_alert $dbname

echo -e "\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
echo "`date` - $0 Ending for $Pdatabase"
echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
}

while getopts "d:" opt
do
  case $opt in
        d) Pdatabase=$OPTARG ;;
        *) Usage
           Exit_fail
           ;;
  esac
done

main
exit 0

