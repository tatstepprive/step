MTBF=mean time between failures (should increase); How frequently db not available 
MTTR=mean time to recover (should decrease); How many time needs to be available again, repair time
RAC=clustered db of 1 physical db opened by multiple instance on multiple pcs; 
    f:100% availability (protects against hardware, os, software failures)
Streams=>=2 db on separate pcs kept in sync; 
    f:100% availability (protects against hardware, os, software, disk, network  failures)
DG=data guard; 1 primary db and multiple standby db kept in sync;
    f: zero/no data loss.

Time line:
MTBF              MTTR         MTBF             MTTR
::::::::::::://///............:::::::::::::////...........:::::::::::::
db OK        | db NOK         |db OK       |db NOK        |db OK

-----------------------------------------------------------------------
PMON=process monitor (background process)
DDL=data definition language (create, drop etc)
DML=data manipulation language (insert, update, delete)
LGWR=log writer (background process)
DBWR=DBWn=database writer (till 20 background processes DBW0-DBW20)
SMON=system monitor f: opens db after check db files
Categories Failures:
1 Statement failure: 
 * because invalid data like format or constaint viotation (no dba error)
 * because of logical error in app programming causing deadlock (no dba error)
 * because space management problems like unable extent a segment (dba error)
 * because of insufficient privileges (no dba error)
Tip: if statement fails, it will be rolled back (auto revert using of undo), other DML will remain uncommitted

2 User process failure
 * because of abnormal exit instead of logging out;
 * because of terminal rebooting
Tip: PMON will clean up server processes which report lost contact with user process
     PMON will roll back transaction, release any locks held by the session, release PGA to os.

3 Network failure
 * because no entry in tns_names.ora on client side
 * because db listener is not running (dba error)
 * many concurrent connections (on server add second network card (on separate subnet), configure 2 listeners with different address/port) 
Question: multiple listeners on same network card with diff port is possible? Or should be listener per card?

4 User errors:
 * DDL statements like drop table have commit included/builtin, no rollback possible
 * DML statements with user commit, no rollback possible
Tip: Commit built into DDL statements will include any preceding DML statements
Tip: dba can fix commited transactions by using flashback query, flashback drop, flashback db and incomplete recovery
Tip: with flashback database and incomplete recovery all db will be back in time before error occured, so you will lose work done

5 Media failure:
 * because of damage of disk and losing db files
 * because of user error accidentally deleting db files 
Tip: db files (control file, online redo logs, datafiles)
Tip: multiplex control file, online redo logs, archive logs
Tip: backup data files, control file, archive logs
Tip: can not multiplex datafile, no need to backup online redo logs.

6 Instance failure (disorderly shutdown of the instance):
  * because of powercut, rebooting server
  * because of critical hardware problems
  * because of command SHUTDOWN ABORT
Tip: corrupted/inconsistent db=missing commited transactions, stored uncommited transactions
Tip: LGWR writes constanly to online redo log files, DBWn writes to data files
Tip: a commit does not write to datafiles, but LGWR flushes log buffer to online redo log files 
Restore= extract file from backup and put it on where it should be
Recover= auto process, applying changes extracted from redo logs (both online and archived)
----------------------------------------------------------
Recovery: command STARTUP;
SCN=system change number; f: at this point all changes are written to the data files by DBWn.
Tip: the more up to date the checkpoint position, the faster instance recovery
parameter FAST_START_MTTR_TARGET in seconds (default zero, so no effect; max=3600 sec (60 min=1hour)).
Tip: checkpoint auto-tuning is enabled if target_mttr is not zero
-- see estimated_mttr (estimated time to recover in sec),
-- target_mttr (=fast_start_mttr_target=sec to recover), 
-- writes_mttr (number of times WDBn had to write in addition to meet target_mttr)
select * from v$instance recovery;
---------------------------------------------------------
Checkpoint=the point in redo stream from which instance must start after following a crash)
* incremental checkpoint (auto by DBWn, some dirty buffers are written to disk)
* full checkpoint (all dirty buffers are written to disk)(on request, on normal/immediate/transactional shutdown)
    cmd: alter system checkpoint;
* partial checkpoint (auto part of certain operations)
    * when taking tablespace offline (all tablespace blocks)
    * when taking datafile offline (all datafile blocks)
    * when dropping a segment (all segment blocks)
    * when truncate a table (all table blocks)
    * when putting tablespace in backup mode (all tablespace blocks)
----------------------------------------------------------
Controlfile
f: used to mount db, while db open it will be read and written.
Tip: multiplex (have copies) min 2 max 8. Recommends: 3 (default) 
     by install 3 multiplexed controlfiles are in same dir, they should be in diff dirs/disks
Add or move controlfile steps:
show parameters control_files;
shutdown immediate;
-- move or copy control file (do no move or copy when db open)
startup nomount;
alter system set control_files="/data/control01.ctl","/data2/control01.clt","/data3/control03.ctl" scope=spfile;
startup force;
show parameters control_files;
