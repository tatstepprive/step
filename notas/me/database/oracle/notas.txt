#Names
spfile=server parameter file (binary)
pfile= parameter file (text)
context area= area for processing an sql statement
PDB=pluggable database
CDB=container database
ADR=automatic diagnostic repository
DBCA=Data Base Configuration Assistant
SGA=system global area
PGA=program global area
OUI=oracle universal installer
ONCA=oracle net configuration assistant
=====================================================
# Spfile = server parameter file
default name spfile<sid>.ora (exp: spfileorcl.ora)
default location $ORACLE_HOME/dbs
preferred choice to start db
binary file (you can not edit it manually)
db can read/write to spfile
change parameters in spfile by 'alter system...'
auto created by DBCA when creating CDB
=======================================================
# pfile= text init parameter file
default name init.ora
location $ORACLE_HOME/dbs
text file with parameters as name/value pairs 
db can read pfile
change parameters in pfile and restart db
can be created from spfile, default init.ora is auto created when creating db
=======================================================
#search order for parameters file
1 spfile<sid>.ora (spfile)
2 spfile.ora
3 init<sid>.ora (pfile)
=======================================================
#Parameters types: (see doc via search 'oracle database reference 19c')
#https://docs.oracle.com/en/database/oracle/oracle-database/
#https://docs.oracle.com/en/database/oracle/oracle-database/19/refrn/index.html
#https://docs.oracle.com/en/database/oracle/oracle-database/12.2/refrn/index.html
Basic params (30 params) (ex: DB_BLOCK_SIZE, SGA_TARGET, CONTROL_FILES)
Advanced params (ex: DB_CACHE_SIZE)
Derived params= their values are calculated from other params (ex sessions=1.5*processes + 22
OS dependent params (ex: DB_BLOCK_SIZE)
=======================================================
#Modify params
#show
Query v$parameter to view value of param 
(columns: 
isses_modifiable session level changes; 
issys_modifiable system level changes, 
ispdb_modifiable pdb level changes)
#modify
alter session/alter system
(scope:
memory= changes in memory, effect immediately, persist(=exists) until db restarts (after restart is gone)
spfile= changes in spfile, effect after restart db (shutdown needed)
both= memory+spfile (default)
deferred=effective for future sessions
sqlplus as sysdba
alter system set max_idle_time=20 scope=both;
# max_idle_time is O (zero) by default and means connection (session) will be NEVER auto closed by db after amount of time
# max_idle_time=20 connection will be auto closed after 20 minutes when no activity
# when value is set, changing to lower value is OK (20 to 10), but higher value workaround
# max_idle_time 20 to 30 workaround (no workaround when testing on version 19c)
sqlplus as sysdba
alter system reset max_idle_time scope=both;
alter system set max_idle_time=30 scope=both; 
# default scope
# if db started with spfile, then default scope=both and no need to be type;
# if db started with pfile as parameter, the default scope=memeory and no need to type;
# BUT when testing on 19c: scope both with using spfile is not applied if not typed. !!!
======================================================
#remove deprecated parameter value in spfile (BACKGROUND_DUMP_DEST (replaced by DIAGNOSTIC_DEST)
SELECT name FROM v$parameter WHERE isdeprecated = 'TRUE';
show parameter BACKGROUND_DUMP_DEST;
alter system reset parameter_name scope=spfile; --OR scope=both
#remove deprecated parameter second way
sqlplus / as sysdba
create pfile from spfile;
--- edit pfile to remove extraneous lines
create spfile from pfile;
startup
exit
=======================================================
#Db is not running if message
sqlplus / as sysdba
connected to an idle instance
in sqldeveloper we will have ORA-12514 if session was open and db went down
==========================================================
#create pfile (file will be created in $ORACLE_HOME/dbs/ location
#using pattern name for pfile 'init<sid>.ora', pfile will be auto searched when spfile not available
sqlplus / as sysdba
sql>create pfile='initorcl.ora' from spfile;
#create pfile using non default name
#attention: location should be given where to find file, using varible $ORACLE_HOME is OK
sqlplus /as sysdba
sql> create pfile='test.ora' from spfile;
sql> shutdown immediate;
sql> startup pfile='$ORACLE_HOME/dbs/test.ora'
==========================================================
#with which param file is db started? 
#If value column is empty, db started with pfile, 
#if value column is $ORACLE_HOME/dbs/spfile<sid>.ora, db started with spfile
sqlplus / as sysdba
sql> show parameter spfile
=========================================================
#show diff what in memory and what in spfile on disk, use 
#v$spparameter view which contains info from spfile only
select * from v$spparameter;
==========================================================
ADR= automatic diagnostic repository
is a file-based repo outside the db
is a system-wide central tracing and logging repo
stores traces, alert log, health monitor
location see parameter diagnostic_dest or select * from v$diag_info;
Alert log contains:
1 non default init params used at startup
2 internal errors (ORA-00600), block corruption errors (ORA-01578), deadlock errors (ORA-00060)
3 admin operations like create,alter,drop,startup,shutdown,archivelog statements
Trace file can be from background process and server process (ex: orcl_dbw0_<nr>.trc and orcl_ora_<nr>.trc)
All logs from server process:
ls -ltra $ORACLE_BASE/diag/rdbms/orcl/orcl/trace/orcl_ora*.trc
========================================================
# show log locations
sqlplus / as sysdba;
sql> col name format a25
sql> col value format a50
sql> select name,value from v$diag_info;
=========================================================
#view/show log content using cli
cat /u01/app/oracle/diag/rdbms/orcl/orcl/trace/alert_orcl.log
cat /u01/app/oracle/diag/rdbms/orcl/orcl/log/attention.log
cat /u01/app/oracle/diag/rdbms/orcl/orcl/alert/log.xml
=========================================================
#view/show log content using oracle utility ADRCI
adrci
adrci> show alert
tip: search,navigation,exit like in vi (? or /, Shift+G, :q!)
adrci>exit
=========================================================
#purge log files defualts 
default retention(=to keep) period:
long period for incidents and alert logs = 365 days
short period for traces and core dumps = 30 days 
#set purge policy
adrci
adrci> set HOMEPATH diag/rdbms/orcl/orcl
adrci> select sizep_policy from adr_control_aux
adrci> select shortp_policy, longp_policy from adr_control
tip: shows numbers in hours
SHORTP_POLICY        LONGP_POLICY         
-------------------- -------------------- 
720                  8760 
720hours/24=30 days
8760hours/24=366 days
192hours/24=8 days
sizep_policy is in bytes (200MB=200 000 000)
adrci> estimate(sizep_policy = 200000000)
adrci> estimate(shortp_policy = 192, longp_policy=192)
adrci> set control (shortp_policy=192)
adrci> set control (longp_policy=192)
adrci> set control (sizep_policy=2546268)
adrci> quit
#purge old log files manually to make space safely
adrci
adrci>help purge
tip purge to 5MB
adrci>purge -size 5000000
==========================================================
#enable ddl loging
sqlplus / as sysdba
sql> show con_name
sql> alter session set container=orclpdb;
sql> show con_name
sql> show parameter ddl
sql> alter session set enable_ddl_logging=true;
tip: activate only for current session
sql>create table mytest (n number);
error: ORA-01109: database not open
fix:
sql>ALTER DATABASE OPEN;
sql>create table mytest (n number);
sql>quit
cat $ORACLE_BASE/diag/rdbms/orcl/orcl/log/ddl/log.xml
cat $ORACLE_BASE/diag/rdbms/orcl/orcl/log/ddl_orcl.log
================================
#Create database
methods:
create a pdb by using the seed (seed=template)
create a pdb from a non-cdb
clone an existing pdb or non-cdb
plug an unplugged pdb into a different cdb
relocate a pdb to a different cdb
create a pdb as a proxy pdb
--------
tools:
sqlplus
sqldeveloper
enterprise manager cloud control
dbca
--------
#create pdb from seed (seed=template)
use statement: create pluggable database
1 it will copy datafiles from seed to new location
2 it will create tablespaces system and sysaux
3 it will create default schemas and common users with sys as super user and system
4 it will create db service (db instance)
prerequisites:
1 the current container must be root
2 you must have create pluggable db privileges
3 cdb must be in 'read write' mode
4 seed is always in read mode only
#Create pdb: use scripts see sql scripts directory
#Create pdb:  use dbca when connecting ssh -X user@oracleHost
dbca
Manage Pluggable databases, next
Create a Pluggable database, next, select orcl contaner, no input for user and pass
Create a new Pluggable database fro another PDB (select PDB$SEED)
Pluggable database name: pdb2, put admin name, admin pass, confirm admin pass
On Create default user tablespace
#Create pdb by cloning: use scripts see sql scripts directory
Cloning is copying a source pdb from a cdb and plugging the copy into the same cdb or another cdb.
#Plug/unplug pdb
Cdb= container db => has 1 root container, 1 seed pdb (template), multiple pdbs
Unplugging a pdb is diassociating pdb from cdb
Plugging in a pdb is associating pdb with cdb
Steps:
1 close pdb1
2 unplug pdb1 to xml
3 drop pdb1 but keep datafiles
4 check compatibility
5 plug pdb1 in using xml
#Drop pdb: use scripts see sql scripts directory
#Drop pdb:  use dbca when connecting ssh -X user@oracleHost
dbca
Manage Pluggable databases, next
Drop a Pluggable database, next, select orcl contaner, no input for user and pass
Drop db by selecting from the list
===============================
# connect to the new db
sqlplus / as sysdba
sql>show con_name
sql> col name format a20
sql> select name, open_mode from v$pdbs;
sql> alter session set container=pdb1;
sql> show con_name;
tip: same as show con_name is using services view when container is set to no root
sql> select name from v$services;
sql> show parameter domain
sql> connect <user>/<pass>@<host>:1521/pdb1<.domain>
tip: using sqldeveloper 'Service name': pdb1<.domain>
tip: after adapting $ORACLE_HOME/network/admin/tnsnames.ora
sql> connect <user>/<pass>@pdb1<.domain>
===================================
#Oracle network environment
During oracle db install, oui (oracle universal installer) launches onca (oracle net configuration assistant)
and creates local listener named LISTENER
f: launches SP (server process) in response to connection request from client
f: dynamic service registration (info about available db services)
f: if listener is not running, client can not connect db with a new connection, the existant connectios are not affected
#location listener param file: 
$ORACLE_HOME/network/admin/listener.ora
$ORACLE_HOME/network/admin/tnsnames.ora
#Tip: if file listener.ora is removed/renamed/not found,
# then listener is using TCP/IP and port 1521 (default values), 
#so listener can run and register services  without this file listener.ora

# start listener 
# (wait 60 sec to see 'Services Summary' with registered services) or
# or execute sql to skip waiting 60 sec for services registration:
# alter system register;
lsnrctl start
# show listener status
lsnrctl status
# stop listener
lsnrctl stop
# interactive listener or listener utility
lsnrctl

#Use non-default port:
1 change listener.ora port
2 change tnsnames.ora port
3 change each service port in tnsnames.ora
4 refresh by forcing reread files: alter system set local_listener=LISTENER_ORCL
5 lsnrctl stop; lsnrctl start; lsnrctl status;

#Add extra listener (dynamic) with other port
1 add in listener.ora entry
LISTENER2 =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = oracledb)(PORT = 1527))
    )
2 add tnsnames.ora
LISTENER2 =
  (ADDRESS = (PROTOCOL = TCP)(HOST = oracledb)(PORT = 1527))

3 NO change each service port in tnsnames.ora
4 alter system set local_listener='LISTENER_ORCL,LISTENER2'
5 lsnrctl start listener2; lsnrclt status listener2;

# Add extra listener (static), not recommended
1 add in listener.ora 2 entry listnerName and SID_LIST_<listnerName>
LISTENER3 =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = oracledb)(PORT = 1529))
    )
SID_LIST_LISTENER3 =
( SID_LIST=
  ( SID_DESC=
    (GLOBAL_DBNAME=<pdbname.domain>)
    (SID_NAME=orcl)
    (ORACLE_HOME=<$ORACLE_HOME value>)
  )
)
2 lsnrctl start listener3; lsnrclt status listener3;
# Tip with static listener status for instance 'orcl' UNKNOWN - it's normal and working
---------------------------------------
#Tools to configure listener 
#Gui
1 Oracle Net Manager=netmgr
2 Oracle Net Configuration Assistant=netca
3 Database Configuration Assistant=dbca
4 Enterprise Manager Cloud Control
#Cli
5 Listener Control Utility=lsnrctl
6 Editing files listener.ora and tnsnames.ora directly
================================================
#Test connection 
tnsping <service_name>
tnsping pdb1
=================================================
#Database link
1 you must have create database link system privilege
=================================================
Dedicated server=default oracle net configuration where each user process connects to its own SP (server process)
Shared server=number user processes use a pool of server processes that are shared by all sessions
Distributed transaction=affects row in more than one db.
================================================
#easy connect
sql> connect <user>/<pass>@<host>:<port>/<service_name>
sql> connect <user>/<pass>@<service_name_from_tnsnames>
Tip: tnsnames.ora has no relation between entry (alias) and service_name or instance name
     But keep them same to make it simple.
================================================
Database Control=$ORACLE_HOME/bin/emctl is not available in release 19c (emctl start dbconsole)
Note: Enterprise Manager Database Control is no longer available in Oracle Database 12c. 
You can use Enterprise Manager Cloud Control 12c or EM Express 12c to manage your Oracle Database 12c databases.
================================================
xclock is a handy tool to test if the DISPLAY variable
================================================
ERM=Entity Relation Model (Entity=table, Attribute=column, Relationship=assosiation between entities, verb, FK (foreign key f: refers PK or other unique key in other table))
Attribute notations= * mandatory; o optional; #* PK=(primary key f: unique column id) 
================================================
ERD=Entity Relationship Diagram=ER Diagram=ER model
================================================
#Db has unique sid and multiple service_names for db:
#show service_name(s)
select value from v$parameter where name like '%service_name%';
show parameter service_name ;
#show sid
select * from global_name;
================================================
# sql statement type Transaction control
commit
rollback
savepoint
===============================================
OLTP=high-volume Online Transaction Processing
==============================================
#Tip: arithmetic expression with null will evaluate to null (exp:null+10=> null)
==============================================
#Tip: column alias (renames column heading) exp: 
select first_name as name, last_name  ...
select first_name name, last_name ...
select first_name "Name" ...
==============================================
#Tip: concatenation operator ||
select first_name||' '||last_name "Full Name" ...
==============================================
#Tip: number no quotes, characters string and date values in quotes
... where age=25
... where first_name='Maya'
... where birth_date='18-nov-77' ---'dd-mm-yy'
==============================================
#Tip: using between put bigger smaller value first. The order is important
... where age between 30 and 40 --OK, result
... where age between 40 and 30 --NOK, no rows
===============================================
#Tip: using like % is >=1 char, _ is 1 char
#Tip: using escape
... where job_id like 'SYS/_%' escape '/';
===============================================
#Tip: using null value
... where name is null --OK, result
... where name is not null --OK, result
... where name=null    --NOK, no rows
... where name!=null    --NOK, no rows
===============================================
#Tip: using not equal (same result, different notation)
... where name<>'Maya'
... where name!='Maya'
===============================================
#Tip: rule of precedence
 1 arithmetic operator
 2 concatenation operator
 3 comparison conditions
 4 is (not) null, like, (not) in
 5 (not) between
 6 not equal to
 7 NOT logical operator
 8 AND logical operator
 9 OR logical operator
exp: cond1 or cond2 and cond3 (like in math cond1 + cond2 * cond3 => 10+20*5)
use () if you dont know rules or hesitate or when you want override rules of precedence
=================================================
#Tip: using order by containing null values
... order by name nulls first;
#Tip: using order by column alias
select first_name fn from persons order by fn;
#Tip: using order by column order
select first_name, last_name from persons order by 1,2;
=================================================
#Tip using fetch (from 12c) f: get limited result with row count
select first_name, last_name 
from persons
order by 1,2
fetch first 10 rows only;
#Tip using fetch (from 12c) f: get limited result with percent
...
fetch first 50 percent rows only;
#Tip using fetch (from 12c) f: get limited result with skipping some rows with offset
...
offset 10 rows fetch next 5 rows only;
#Tip using fetch (from 12c) f: get limited result with ties (+ extra row if result is not same)
fetch first 2 rows with ties;
=================================================
#Tip: substitution variables with & and && f: oracle will ask for value 
#They used in where conditions, order by, column expressions, table names, all select statement
... where id=&id; --for numbers no quotes
... where first_name='&name' --for strings or dates with quotes
#Tip: multiple substitutions are possible in one statement
select first_name, &my_last_name
from persons
where &condition
order by &order_column;
=================================================
#Tip: using define f: declare vars for session duration
define my_first_name='Maya';
select last_name from persons where first_name=&my_first_name -- asking window will not appear, because var is defined for session
undefine my_first_name;
select last_name from persons where first_name=&my_first_name -- asking window will appear
=================================================
#Tip: define own asking window
ACCEPT my_first_name PROMPT 'Please, provide the first name:';
select last_name from persons where first_name=&my_first_name 
=================================================
#Tip: diff between substitution variables with & and &&: 
#with & value is given in asking window and forgotten, with && value is remembered for session duration
================================================
#Tip: using SET VERIFY ON f: shows old and new value in query (it default in sqlplus, but should be set in sqldeveloper)
#Tip: using SET VERIFY OFF f: escape meanig of charakter & and using it query
select * where departement like '%&%' -- asking window will not appear, meanig of & is charakter 
================================================
Single row functions:
 * general (nvl, nvl2, nullif, coalesce, decode, case etc)
 * character (lower, upper, initcap etc)
 * number    (round, trunc, mod etc)
 * date  (months_between, add_months, next_day, last_day, round, trunc etc)
 * conversion (to_date, to_char, to_number etc)
================================================
Tip: null come last in order asc, but you can change order
order by fname; --same as order by fname nulls last;
order by fname nulls first;
Tip: select replace to replace or remove some chars
select replace ('test', 'te', 'xx') from dual;
--output (replaced chars) xxst
select replace ('test', 'te') from dual;
--output (removed chars) st
Tip: select trim to remove spaces or chars from beginning and and, no removal in between
select trim('  HELLO    WORLD   ') from dual;
--output HELLO   WORLD
select trim ('b' from 'bbbbbbeginb') from dual;
--output egin
select trim('he' from 'hello') from dual;
--gives error, because only one char allowed to be trimmed
Tip: you can not make constraint for long column or use it in group by or order by
 
================================================
The same formating using 9 or 0, G (=group delimiter), D (=decimal delimiter)
0 and 9 are can be used together, G and D should be used together (9G999.99 will give error)
select to_char(1001.50, '9,999.99') from dual;
select to_char(1001.50, '0,000.00') from dual;
select to_char(1001.50, '9G999D99') from dual;
select to_char(1001.50, '0G000D00') from dual;
select to_char(1001.50, '9G909D99') from dual;
================================================
