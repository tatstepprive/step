Client connection properties for next clients:
 1 sqldeveloper
 2 toad
 3 dbeaver
 4 intellij
 5 eclipce
 6 weblogic
 7 tomcat
 8 dbmaintain
 9 scriptura
 10 hibernate
 11 java
 12 others

Connection properties name=value millisec/sec/min

Connection pool in use
 10 Hibernate uses C3PO (c3po.jar) connection pooling software

------------------------
Closing connection in the code vs closing connection in the pool
connection pooled vs non-pooled :
 In non-pooled, getConnection() established a brand new connection to the
database, and close() actually closes the connection and the session
is gone from v$session
 In connection pooled environment, the app
server overrides the getConnection() and close() methods to get a
connection from the pool and return that connection back to the pool.
The close() leaves that connection open, and now available for some
other process to call getConnection().

The problem is the close() in non-pooled environment meant that Oracle
cleaned up all the open resources instead of the programmer, in
particular, the ref_cursors that programmer decided to open. So, the
java developer who has been ignorantly coding by getting a ref_cursor,
doing stuff with that resultset and then closing that connection never
has to learn what he should know, which is a ref_cursor is a resource.
So, this code gets moved into an application server environment, that
close() call now puts that connection back on the pool and then later
on, the database errors out with ORA-01000 maximum open cursor
exceeded.
----------------------

Pool and inactive connection, open cursors state

Timeouts in use
 10 Hibernate (in code setTimeout(60) // in sec = 60 sec=1 min
           
================================================
When creating an Oracle database, you need to load the oracle jdbc driver. 
Sometimes you need to know which version of the Oracle jdbc driver is? 1. The Oracle JDBC driver version 8.1.7 released with Oracle 8i
classes111.zip is suitable for JDK 1.1.x
classes12.zip is suitable for JDK 1.2.x
This version only has zip files and no jar files
2. The Oracle JDBC driver 9.2.0 version
classes111.jar released with Oracle 9i is suitable for JDK 1.1.x
classes12.jar is suitable for JDK 1.2 and JDK 1.3
ojdbc14.jar is suitable for JDK 1.4
3．The Oracle JDBC driver 10.2 version
classes12.jar released with Oracle 10.2 is suitable for JDK 1.2 and JDK 1.3.
ojdbc14.jar is suitable for JDK 1.4 and 5.0
4．Oracle JDBC driver 11.1 version released with Oracle 11.1
ojdbc5.jar: suitable for jdk5
ojdbc6.jar: suitable for jdk6
5. Oracle JDBC driver 12.1 version released with Oracle 12.1
Ojdbc7.jar: suitable for jdk7 and jdk8
ojdbc6.jar: suitable for jdk6
6. Oracle JDBC driver 12.2 version released with Oracle 12.2
Ojdbc8.jar: applicable to jdk8
7. Oracle JDBC driver 18.3 version
Ojdbc8.jar released with Oracle 18.3 : suitable for jdk8
8. Oracle JDBC driver version 19.3 released with Oracle 19.3
Ojdbc10.jar: applicable to jdk10
Ojdbc8.jar: applicable to jdk8 
=============================================
