--Supported from 12.2 (we use 12.1)
--create table with no partitions
CREATE TABLE MY_USER.t1 (
  id           NUMBER,
  description  VARCHAR2(50),
  created_date DATE,
  CONSTRAINT t1_pk PRIMARY KEY (id)
);
--add some data
CREATE INDEX MY_USER.t1_created_date_idx ON IRIS_USER.t1(created_date);

INSERT INTO MY_USER.t1
SELECT level,
       'Description for ' || level,
       ADD_MONTHS(TO_DATE('01-JAN-2017', 'DD-MON-YYYY'), -TRUNC(DBMS_RANDOM.value(1,4)-1)*12)
FROM   dual
CONNECT BY level <= 10000;
COMMIT;
--check data
SELECT created_date, COUNT(*)
FROM   MY_USER.t1
GROUP BY created_date
ORDER BY 1;
--output
--created_date	count(*)
--1/01/2015	3263
--1/01/2016	3377
--1/01/2017	3360

--add partitions
ALTER TABLE MY_USER.T1 MODIFY
  PARTITION BY RANGE (created_date)  (
    PARTITION t1_p_2015 VALUES LESS THAN (TO_DATE('01-JAN-2016','DD-MON-YYYY')),
    PARTITION t1_p_2016 VALUES LESS THAN (TO_DATE('01-JAN-2017','DD-MON-YYYY')),
    PARTITION t1_p_2017 VALUES LESS THAN (TO_DATE('01-JAN-2018','DD-MON-YYYY'))
  ) online;

--gather statistics
EXEC DBMS_STATS.gather_table_stats('MY_USER', 'T1');

--check partitioned data
SELECT table_owner, table_name, partition_name, num_rows
FROM   all_tab_partitions
where table_owner='MY_USER'
ORDER BY 1,2,3;
--output
--table_owner table_name partition_name num_rows
--MY_USER	T1	T1_P_2015	3263
--MY_USER	T1	T1_P_2016	3377
--MY_USER	T1	T1_P_2017	3360

--check indexes
SELECT owner, index_name, partitioned, status
FROM   all_indexes
where  owner='MY_USER'
ORDER BY 1;
--output
--owner		index_name		partitioned    status
--MY_USER	T1_PK			NO		VALID
--MY_USER	T1_CREATED_DATE_IDX	YES		N/A

--check index usable
SELECT index_name, partition_name, status
FROM   all_ind_partitions
where index_owner='MY_USER'
ORDER BY 1,2;
--output
--index_name		partition_name	status
--T1_CREATED_DATE_IDX	T1_P_2015	USABLE
--T1_CREATED_DATE_IDX	T1_P_2016	USABLE
--T1_CREATED_DATE_IDX	T1_P_2017	USABLE

--add subpartitions
ALTER TABLE MY_USER.t1 MODIFY
  PARTITION BY RANGE (created_date) SUBPARTITION BY HASH (id)(
    PARTITION t1_part_2015 VALUES LESS THAN (TO_DATE('01-JAN-2016','DD-MON-YYYY')) (
      SUBPARTITION t1_sub_part_2015_1,
      SUBPARTITION t1_sub_part_2015_2,
      SUBPARTITION t1_sub_part_2015_3,
      SUBPARTITION t1_sub_part_2015_4
    ),
    PARTITION t1_part_2016 VALUES LESS THAN (TO_DATE('01-JAN-2017','DD-MON-YYYY')) (
      SUBPARTITION t1_sub_part_2016_1,
      SUBPARTITION t1_sub_part_2016_2,
      SUBPARTITION t1_sub_part_2016_3,
      SUBPARTITION t1_sub_part_2016_4
    ),
    PARTITION t1_part_2017 VALUES LESS THAN (TO_DATE('01-JAN-2018','DD-MON-YYYY')) (
      SUBPARTITION t1_sub_part_2017_1,
      SUBPARTITION t1_sub_part_2017_2,
      SUBPARTITION t1_sub_part_2017_3,
      SUBPARTITION t1_sub_part_2017_4
    )
  ) ONLINE;

--check subpartitions
SELECT table_name, partition_name, subpartition_name, num_rows
FROM   all_tab_subpartitions
where table_owner='MY_USER'
ORDER BY 1,2,3;
--output 12 rows
--table_name partition_name subpartition_name num_rows
--T1	T1_PART_2015	T1_SUB_PART_2015_1
--T1	T1_PART_2015	T1_SUB_PART_2015_2
--T1	T1_PART_2015	T1_SUB_PART_2015_3
--T1	T1_PART_2015	T1_SUB_PART_2015_4
--T1	T1_PART_2016	T1_SUB_PART_2016_1
--T1	T1_PART_2016	T1_SUB_PART_2016_2
--T1	T1_PART_2016	T1_SUB_PART_2016_3
--T1	T1_PART_2016	T1_SUB_PART_2016_4
--T1	T1_PART_2017	T1_SUB_PART_2017_1
--T1	T1_PART_2017	T1_SUB_PART_2017_2
--T1	T1_PART_2017	T1_SUB_PART_2017_3
--T1	T1_PART_2017	T1_SUB_PART_2017_4

--attention, num_rows is empty, to fix execute:
exec dbms_stats.gather_table_stats(ownname => 'MY_USER', tabname => 'T1', granularity => 'SUBPARTITION');

--check subpartitions
SELECT table_name, partition_name, subpartition_name, num_rows
FROM   all_tab_subpartitions
where table_owner='MY_USER'
ORDER BY 1,2,3;
--output 12 rows
--table_name partition_name subpartition_name num_rows
--T1	T1_PART_2015	T1_SUB_PART_2015_1	830
--T1	T1_PART_2015	T1_SUB_PART_2015_2	830
--T1	T1_PART_2015	T1_SUB_PART_2015_3	803
--T1	T1_PART_2015	T1_SUB_PART_2015_4	800
--T1	T1_PART_2016	T1_SUB_PART_2016_1	831
--T1	T1_PART_2016	T1_SUB_PART_2016_2	846
--T1	T1_PART_2016	T1_SUB_PART_2016_3	844
--T1	T1_PART_2016	T1_SUB_PART_2016_4	856
--T1	T1_PART_2017	T1_SUB_PART_2017_1	810
--T1	T1_PART_2017	T1_SUB_PART_2017_2	851
--T1	T1_PART_2017	T1_SUB_PART_2017_3	874
--T1	T1_PART_2017	T1_SUB_PART_2017_4	825

--check index on subpartitions
SELECT index_name, partition_name, subpartition_name, status
FROM   all_ind_subpartitions
where index_owner='MY_USER'
ORDER BY 1,2;
--output 12 rows
--T1_CREATED_DATE_IDX	T1_PART_2015	T1_SUB_PART_2015_1	USABLE
--T1_CREATED_DATE_IDX	T1_PART_2015	T1_SUB_PART_2015_2	USABLE
--T1_CREATED_DATE_IDX	T1_PART_2015	T1_SUB_PART_2015_3	USABLE
--T1_CREATED_DATE_IDX	T1_PART_2015	T1_SUB_PART_2015_4	USABLE
--T1_CREATED_DATE_IDX	T1_PART_2016	T1_SUB_PART_2016_1	USABLE
--T1_CREATED_DATE_IDX	T1_PART_2016	T1_SUB_PART_2016_2	USABLE
--T1_CREATED_DATE_IDX	T1_PART_2016	T1_SUB_PART_2016_4	USABLE
--T1_CREATED_DATE_IDX	T1_PART_2016	T1_SUB_PART_2016_3	USABLE
--T1_CREATED_DATE_IDX	T1_PART_2017	T1_SUB_PART_2017_1	USABLE
--T1_CREATED_DATE_IDX	T1_PART_2017	T1_SUB_PART_2017_3	USABLE
--T1_CREATED_DATE_IDX	T1_PART_2017	T1_SUB_PART_2017_2	USABLE
--T1_CREATED_DATE_IDX	T1_PART_2017	T1_SUB_PART_2017_4	USABLE

--------------------------------------------------------------------
--------------------------------------------------------------------
--12.1 Partition existing table with clobs
TMSH=U1
MCONN=my_suser/my_pass@myhost.mydomain/MYSID
create_interim_table_v3(){
echo "Test create interim table on ${TMSH} with 9 partitions and 3 tbs with 3 partition per tbs"
sqlplus ${MCONN} <<EOF
  set serveroutput on
create table U1.FILMIFICATES_INTERIM
TABLESPACE U1_DATA_FILMIFICATE
STORAGE    (
            INITIAL          100M
            NEXT             100M
           )
partition by hash(FILM_ID)
(
           partition FILM_P01 tablespace U1_DATA_FILMIFICATE_PSET1,
           partition FILM_P02 tablespace U1_DATA_FILMIFICATE_PSET1,
           partition FILM_P03 tablespace U1_DATA_FILMIFICATE_PSET1,
           partition FILM_P04 tablespace U1_DATA_FILMIFICATE_PSET2,
           partition FILM_P05 tablespace U1_DATA_FILMIFICATE_PSET2,
           partition FILM_P06 tablespace U1_DATA_FILMIFICATE_PSET2,
           partition FILM_P07 tablespace U1_DATA_FILMIFICATE_PSET3,
           partition FILM_P08 tablespace U1_DATA_FILMIFICATE_PSET3,
           partition FILM_P09 tablespace U1_DATA_FILMIFICATE_PSET3
          )
as
select * from U1.FILMIFICATES
where 1=0;
  exit;
EOF
echo "===================="
}
test_connect(){
echo "Test connect to ${TMSH}"
sqlplus ${MCONN} <<EOF
  set serveroutput on
  ALTER SESSION SET nls_date_format='dd-mon-yyyy hh24:mi:ss';
  select sysdate from dual;
  exit;
EOF
echo "===================="
}
start_redef_table_v2(){
echo "Test start_redef_table on ${TMSH}"
sqlplus ${MCONN} <<EOF
  set serveroutput on
alter session force parallel dml parallel 4;
alter session force parallel query parallel 4;
BEGIN
  DBMS_REDEFINITION.START_REDEF_TABLE('U1','FILMIFICATES','FILMIFICATES_INTERIM');
END;
/
  exit;
EOF
echo "===================="
}
copy_dependent_objects_v2(){
echo "Test copy dependent objects on ${TMSH}"
sqlplus ${MCONN} <<EOF
  set serveroutput on
alter session force parallel dml parallel 4;
alter session force parallel query parallel 4;
DECLARE
  num_errors PLS_INTEGER;
BEGIN
  DBMS_REDEFINITION.COPY_TABLE_DEPENDENTS ('U1',  'FILMIFICATES', 'FILMIFICATES_INTERIM',
  DBMS_REDEFINITION.CONS_ORIG_PARAMS, TRUE, TRUE, TRUE, TRUE, num_errors);
END;
/
  exit;
EOF
echo "===================="
}
finish_redef_table(){
echo "Test finish_redef_tables on ${TMSH}"
sqlplus ${MCONN} <<EOF
  set serveroutput on
alter session force parallel dml parallel 2;
alter session force parallel query parallel 2;
BEGIN
  DBMS_REDEFINITION.FINISH_REDEF_TABLE ('U1', 'FILMIFICATES', 'FILMIFICATES_INTERIM');
END;
/
  exit;
EOF
echo "===================="
}
drop_table(){
echo "Test drop table on ${TMSH}"
sqlplus ${MCONN} <<EOF
  set serveroutput on
 drop table U1.FILMIFICATES_INTERIM cascade constraints purge;
  exit;
EOF
echo "===================="
}
#partitioning deel0 create new tbs
CREATE TABLESPACE U1_DATA_FILMIFICATE_PSET1
DATAFILE
  '/ora01/MYSID/data/film_pset1_1.dbf' SIZE 10G AUTOEXTEND ON NEXT 500M MAXSIZE 31G
LOGGING
DEFAULT
  NO INMEMORY
ONLINE
EXTENT MANAGEMENT LOCAL UNIFORM SIZE 100M
BLOCKSIZE 8K
SEGMENT SPACE MANAGEMENT AUTO
FLASHBACK ON;
CREATE TABLESPACE U1_DATA_FILMIFICATE_PSET2
DATAFILE
  '/ora01/MYSID/data/film_pset2_1.dbf' SIZE 10G AUTOEXTEND ON NEXT 500M MAXSIZE 31G
LOGGING
DEFAULT
  NO INMEMORY
ONLINE
EXTENT MANAGEMENT LOCAL UNIFORM SIZE 100M
BLOCKSIZE 8K
SEGMENT SPACE MANAGEMENT AUTO
FLASHBACK ON;
CREATE TABLESPACE U1_DATA_FILMIFICATE_PSET3
DATAFILE
  '/ora01/MYSID/data/film_pset3_1.dbf' SIZE 10G AUTOEXTEND ON NEXT 500M MAXSIZE 31G
LOGGING
DEFAULT
  NO INMEMORY
ONLINE
EXTENT MANAGEMENT LOCAL UNIFORM SIZE 100M
BLOCKSIZE 8K
SEGMENT SPACE MANAGEMENT AUTO
FLASHBACK ON;
#partitioning deel1
test_connect
create_interim_table_v3
start_redef_table_v2
#manually: select object_name, base_table_name, ddl_txt from DBA_REDEFINITION_ERRORS;--if no errors continue, if errors analyze before continue
#partitioning deel2
test_connect
copy_dependent_objects_v2
#partitioning deel3
test_connect
finish_redef_table
#partitioning deel4
test_connect
drop_table
#manually compile invalid objects on U1 or other dep schemas
#manually drop original tbs if empty
------------------------------------------------------------------------
------------------------------------------------------------------------


