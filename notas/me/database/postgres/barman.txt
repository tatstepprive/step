pgbarman.org 
https://docs.pgbarman.org/release/2.13/

written in phyton, opensource

rsync/ssh - archive move
streaming (utility pg_basebackup, pg_receivexlog, pg_receivewal)

yum install barman.noarch barman-cli.noarch
#On centos7 barman server ---------
yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
yum install epel-release
yum install barman
yum install barman-cli
#On centos7 barman server install postgres db to be able restore locally and use psql to test connection
yum install -y postgresql12-server
yum install -y postgresql12-contrib
#On postgres server install barman-cli to be able execute barman commands on postgres side if needed
yum install epel-release
yum install barman-cli
#-------------------
#on postgres server create barman user
createuser -P -e  barman
#output --CREATE ROLE barman PASSWORD 'mdxxx' NOSUPERUSER NOCREATEDB NOCREATEROLE INHERIT LOGIN;
#give privileges
GRANT EXECUTE ON FUNCTION pg_start_backup(text, boolean, boolean) to barman;
GRANT EXECUTE ON FUNCTION pg_stop_backup() to barman;
GRANT EXECUTE ON FUNCTION pg_stop_backup(boolean, boolean) to barman;
GRANT EXECUTE ON FUNCTION pg_switch_wal() to barman;
GRANT EXECUTE ON FUNCTION pg_create_restore_point(text) to barman;
GRANT pg_read_all_settings TO barman;
GRANT pg_read_all_stats TO barman;
#on postgres server create barman_streaming user
createuser -P -e --replication streaming_barman
#output -- CREATE ROLE streaming_barman PASSWORD 'mdxxx' NOSUPERUSER NOCREATEDB NOCREATEROLE INHERIT LOGIN REPLICATION;
#add streaming_barman to pg_hba.conf
host    replication      streaming_barman <barman_ip>/32          md5
#Reload config when connecting via psql
SELECT pg_reload_conf();
#on barman server edit pgpass and test connection
psql -c 'SELECT version()' -U barman -h pg postgres
psql -c 'SELECT version()' -U streaming_barman -h pg postgres
psql -U streaming_barman -h pg -c "IDENTIFY_SYSTEM" replication=1
#-------------------
cd /var/lib/barman
touch .pgpass
pgserver:5432:postgres:barman:passwd
pgserver:5432:postgres:streaming_barman:passwd
chmod 0600 .pgpass
nano /etc/barman.conf
uncomment by removing ; 
compression = gzip
cd /etc/barman.d/
cp streaming-server.conf-template pg.conf
in pg.conf set:
[pg]
;Human readable description
set hostname or ip for pgdatabase server in pg.conf in:
conninfo
streaming_conninfo
uncomment:
streaming_backup_name
streaming_archiver = on
slot_name = barman
create slot = auto
streaming_archiver_batch_size=50
path_prefix="/usr/pgsql-12/bin"

On postgres server: nano postgresql.conf
listen_addresses='*'
wal_level=replica
archive_mode=off --not needed for streaming
max_wal_senders= 2
max_replication_slots= 2

nano pg_hba.conf
host all all 	0.0.0.0/0 md5
host replication streaming_barman barmanip/32 trust
#Question: how to fix trust to md5, because pgpass is not working on barman server for streaming_barman and command
#psql -U streaming_barman -h pg -c "IDENTIFY_SYSTEM" replication=1
#it's asking for password even it's noticed in pgpass
#other commands like 
#psql -c 'SELECT version()' -U streaming_barman -h pg postgres
#are working on barman server for streaming_barman without asking pass and using pgpass
#Temp solution: set trust on postgres server in pg_hba.conf
 
systemctl restart postgresql-12

from barman server test connection
psql -c 'select version()' -U barman -d postgres -h pgip -p 5432
barman check pg --pg is name of configuration file pg.conf
cd /var/log/barman
cat barman.log

On postgres host:
psql and select * from pg_replication_slots;

#if error when executing barman check pg 
#WAL archive: FAILED (please make sure WAL shipping is setup)
#then execute barman switch-wal --archive pg
On barman: 
barman switch-wal --archive pg
barman check pg

On postgres:
cd 12/data/pg_wal
ls and see archive_status directory and wal files like 00000001

On barman
barman backup pg --wait
barman list-backup pg
barman show-backup pg latest
barman replication-status pg
barman show-server pg
barman backup --reuse=link pg

Recovery:
On postgres server:
mkdir -p /files/data
chown -R postgres:postgres /files/data
On barman server:
mkdir -p /files/data
chown -R barman:barman /files/data
su - barman
barman list-backup pg
barman recover pg 65464554 /files/data
cd /files/data
ls 
you will see all files of postgres so recovering on the barman server locally
to recover remotely:
create ssh key for ssh connection to posgres db
barman recover --remote-ssh-command "ssh postgres@pgip" pg 556465454 /files/data
On postgres:
su - postgres
cd /files/data
ls 
see all postgres files
cd /var/lib/pgsql/12/data
systemctl stop postgresql-12
cd /var/lib/pgsql/12
rm -fr data
On barman server:
barman recover --remote-ssh-command "ssh postgres@pgip" pg 556465454 /var/lib/pgsql/12/data
On postgres server:
cd /var/lib/pgsql/12
ls and see data directory
systemctl start postgresql-12
-------------------------------------------
rsync/ssh - archive move with barman
on postgres:
nano postgresql.conf
archive_mode=on
archive_command='barman-wal_archive barmanip pg %p'
systemctl restart postgresql-12
on barman:
cd /etc/barman.d
mv pg.conf pg.conf.bk
cp ssh-server.conf-template pg.conf
edig pg.conf:
[pg]
;Human readable description
ssh_command=ssh postgres@postgresip
conninfo = host=postgresip
backup_mode=rsync
reuse_backup=link
archiver=on
on postgres: 
create ssh key to make connection with barman from postgres
ssh barman@barmanip
barman check pg
barman backup pg --wait
On postgres:
nano postgresql.conf
archive_command='rsync -a %p barman@barmanip:/var/lib/barman/pg/incoming/%f'
systemctl restart postgresql-12
On barman:
mkdir -p /tmp/files
barman backup pg --wait
barman list-backup pg
barman show-backup pg 5464645654
On postgres:
su - postgres
cd /files/data
ls 
see all postgres files
cd /var/lib/pgsql/12/data
systemctl stop postgresql-12
cd /var/lib/pgsql/12
rm -fr data
On barman server:
barman recover --remote-ssh-command "ssh postgres@pgip" pg 556465454 /var/lib/pgsql/12/data
On postgres server:
cd /var/lib/pgsql/12
ls and see data directory
systemctl start postgresql-12

--------------------------------
