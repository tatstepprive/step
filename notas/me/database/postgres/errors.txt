40001-error-in-postgresql
If two transactions like the one you describe above run concurrently, the following will happen:

Transaction 1 locks a row with SELECT ... FOR UPDATE.

Transaction 2 tries to lock the same row and is blocked.

Transaction 1 modifies the value and commits.

Transaction 2 is unblocked, and before it locks the row, it has to recheck if the row version it is about to lock is still the most current version. Because of the modification by Transaction 1, that is no longer the case, and a serialization error is thrown.

There is no way to avoid that problem if several transactions with isolation level REPEATABLE READ or higher are trying to modify the same rows. Be ready to retry often!

It seems like the transaction actually locks more rows than it modifies. That exacerbates the problem. Only lock those rows that you need to change!
-------------------------
#replication
WARNING: following issues were detected
 - node "<host_node_b>" (ID: 2) is not attached to its upstream node "<host_node_primary>" (ID: 1)
 - node "<host_node_c>" (ID: 2) is not attached to its upstream node "<host_node_primary>" (ID: 1)
 - node "<host_node_d>" (ID: 2) is not attached to its upstream node "<host_node_primary>" (ID: 1)
#Solution
ssh to node
 sudo systemctl stop postgresql-12
/usr/pgsql-12/bin/repmgr -f /etc/repmgr/12/repmgr.conf cluster show
/usr/pgsql-12/bin/repmgr -h <host_node_primary> -U repmgr -d repmgr -f /etc/repmgr/12/repmgr.conf standby clone --dry-run
/usr/pgsql-12/bin/repmgr -h <host_node_primary> -U repmgr -d repmgr -f /etc/repmgr/12/repmgr.conf standby clone -F
-------------------------
#archive errors
ps -ef| grep -i arch
--output
postgres: archiver   failed on 00000003000000C700000094
#analyze
ls -ltra /opt/wal/00000003000000C700000094
--the file will be incomplete in /opt/wal archive directory
ls -ltra /var/lib/pgsql/12/data/pg_wal/00000003000000C700000094
--the comlete version of the wal file in pg_wal directory
#solution (no restart needed): remove incomlete file in archive directory and archiver will retry automatically and continue with archiving
rm -fr /opt/wal/00000003000000C700000094
ps -ef| grep -i arch
--output: no failure anymore
postgres: archiver   archiving 00000003000000C900000026
--------------------------
#slow database, duration very high
#posible solution: rebuild statistics
ANALYZE VERBOSE;
-------------------------
Remaining connection slots are reserved for non-replication superuser connections
#Solution
--Edit the PostgreSQL configuration file /vastorage/postgres/data/postgresql.conf and increase the value for max_connections. The value for shared_buffers may also need to be increased
------------------------
#when executing replication from zero on slave/replica
/usr/pgsql-12/bin/repmgr -h <primary> -U repmgr -d repmgr -f /etc/repmgr/12/repmgr.conf standby clone -F
#error Could not send replication command “TIMELINE_HISTORY”: ERROR: could not open file pg_wal/00xxxx.history
pg_basebackup: error: could not send replication command "TIMELINE_HISTORY": ERROR: could not open file "pg_wal/00000005.history": No such file or directory
#fix on primary
#via psql take backup on primary
select pg_start_backup('clone');
select pg_stop_backup();
#via OS on primary
touch /var/lib/pgsql/12/data/pg_wal/00000005.history touch 
touch /opt/wal/00000005.history
#via psql on primary
select pg_start_backup('clone2');
select pg_stop_backup();
#execute replication from zero on slave/replica
/usr/pgsql-12/bin/repmgr -h <primary> -U repmgr -d repmgr -f /etc/repmgr/12/repmgr.conf standby clone -F
--------------------------------------
