#rename link
for i in $(find -iname privORINT-BCSSKSZ.ppk -type l); do mv $(dirname $i)/$(basename $i) $(dirname $i)/privORINT-BCSSKSZ.ppk; done
#==============================
# find broken soft links
find . | xargs file | grep -i "broken symbolic link"
#==============================
#show cpu
sudo lshw| grep -i cpu
#============================== 
#quit bash shell without saving history: kill console
kill -9 $$
#quit bash shell without saving history: unset HISTFILE
unset HISTFILE && exit
#============================== 
#test sftp connection
sftp -vvvv -oIdentityFile=/path/to/private/keyfile.ppk user@host
#==============================
#test ftp connection, can not use user@host
#give user as input, give
#consult man ftp 
ftp --vvvv host
#=============================
# tree versus on window is find, 
#go to dir to execute list of dirs and files and execute find
find
#============================= 
#remove file containing started dashes
#Instead of doing rm -log you simply add ./ to the start and run this 
rm ./-log.txt
#=============================
#using curl
curl -H "Accept: application/json" https://icanhazdadjoke.com/
curl -H "Accept: text/plain" https://icanhazdadjoke.com/
#=============================
#create md5 hash, option -n to not include newline produced by echo
echo -n 'blablaandbla' | md5sum
#============================
#search in pdf file with grep
pdfgrep -in max_conn file.pdf
#===========================
#network diagnostic tool mtr hostname
mtr www.google.be
#==========================
#ubuntu open pdf file 
#or define alias open=xdg-open in .bashrc and use open file.pdf
xdg-open file.pdf
#=========================
#iptables (tip: add port to iptables after install centos server exp: to make connection in browser)
iptables --lin -vnL
iptables -t nat --lin -vnL
iptables -t mangle --lin -vnL
iptables -S
iptables -t nat -S
iptables -t mangle -S
iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 8081 -j ACCEPT
iptables-save
#change-order-iptables-rules
sudo iptables-save > /tmp/iptables.txt
sudo nano /tmp/iptables.txt
sudo iptables-restore < /tmp/iptables.txt
iptables --lin -vnL
iptables-save
#delete entry (flag -D for delete)
iptables -D INPUT -m state --state NEW -m tcp -p tcp --dport 8081 -j ACCEPT
iptables --lin -vnL
#==========================
#show port usage
netstat -tulpn | grep 8081
#==========================
#add sudo user centos commandline
adduser username
passwd username
sudo groupadd NAME-OF-THE-NEW-GROUP
usermod -a -G wheel username
#===========================
#sed examples (usage: replace, find and delete, remove empty lines, show output limited by lines etc)
#replace Bla par Spa in memory, no changes to the file
sed 's/Bla/Spa/g' filename 
#replace Bla par Spa in file and save file, see -i option 
sed -i 's/Bla/Spa/g' filename 
#replace string by nothing, remove string in file
sed -i 's/Bla//g' filename
#remove line containing string in file
sed -i '/Bla/d' file
#remove empty lines in file (^ is started with and $ is endline
sed -i '/^$/d' file
#remove 1 line in file
sed -i '1d' file
#replace tabs par space in file
sed -i 's/\t/ /g' file
#show from line 12 till 18
sed -n 12,18p file
#show all lines except line 12-18, attention no -i option so nothing is saved
sed 12,18d file
#replace Bla par Spa except on line 9
sed -i '9!s/Bla/Spa/g' file
#replace in vi editor by typing
:%s/Bla/Spa/g
#using variables with sed is using double quotes
myvar1="bla"; myvar="spa"; myfile=test.txt 
sed -i "s/$myvar/$myvar/g" "$myfile"
#quote text => result "quote me" in file
sed -i "s/quote me/\"&\"/" file
# if myvar contains / then use other delimiter of your choise like in expl
# the myvar should not contain this delimiter char
sed -i "s|$myvar|bla|g" file
#======================================
#Issue  /bin/bash^M: bad interpreter: No such file or directory when from window to linux
sed -i -e 's/\r$//' scriptname.sh
#======================================
https://tldp.org/HOWTO/Bash-Prompt-HOWTO/
#======================================
# Math calculation on bash command line
echo 300*1.5+22 | bc
#======================================
w: show who is logged on and what they are doing
who: show who is logged on
tty: show current users pseudo terminal
ps -ft pts/1: get process id for the pseudo terminal
Kill the process: kill 28580
Alternatively use pkill -t pts/1
#=======================================
